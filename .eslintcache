[{"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\index.js":"1","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\jumbotron.js":"2","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\jumbotron\\jumbotron.styles.js":"3","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\footer\\footer.component.js":"4","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\footer.js":"5","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\footer\\footer.styles.js":"6","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\faqs.js":"7","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\accordion\\accordion.component.js":"8","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\opt-form\\optform.component.js":"9","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\opt-form\\optform.styles.js":"10","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\App.js":"11","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\global_styles.js":"12","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\accordion\\accordion.styles.js":"13","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\home.js":"14","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\signin.js":"15","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Header\\Header.styles.js":"16","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\header.js":"17","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Header\\Header.component.js":"18","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\feature\\feature.component.js":"19","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\jumbotron\\jumbotron.component.js":"20","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\lib\\firebase.prod.js":"21","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\context\\firebase.js":"22","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\form\\form.component.js":"23","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\form\\form.styles.js":"24","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\signup.js":"25","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\helpers\\routes.js":"26","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\feature\\feature.styles.js":"27","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\hooks\\use-auth-listener.js":"28","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\reportWebVitals.js":"29","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\hooks\\use-content.js":"30","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\profile.js":"31","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\profiles\\profiles.component.js":"32","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\profiles\\profiles.styles.js":"33","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\loading\\loading.styles.js":"34","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\loading\\loading.component.js":"35","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Row\\Row.component.js":"36","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\request.js":"37","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\axios.js":"38","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\banner\\banner.component.js":"39","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\Row.container.js":"40","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Navbar\\navbar.component.js":"41","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Navbar\\navbar.style.js":"42","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\modal\\backdrop.js":"43","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\modal\\modalDetails.component.js":"44","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\modal\\modal.component.js":"45","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Button_Group\\ButtonGroup.js":"46","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Carousel\\Carousel.item.js":"47","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Search\\search.component.js":"48","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\context\\search.context.js":"49","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\search\\Search.js":"50","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\context\\profile.context.js":"51"},{"size":862,"mtime":1612893499984,"results":"52","hashOfConfig":"53"},{"size":1033,"mtime":1611692210548,"results":"54","hashOfConfig":"53"},{"size":1217,"mtime":1611773565198,"results":"55","hashOfConfig":"53"},{"size":1185,"mtime":1611768378251,"results":"56","hashOfConfig":"53"},{"size":1893,"mtime":1611768770389,"results":"57","hashOfConfig":"53"},{"size":1008,"mtime":1611768030530,"results":"58","hashOfConfig":"53"},{"size":1321,"mtime":1612895408550,"results":"59","hashOfConfig":"53"},{"size":1902,"mtime":1611772964268,"results":"60","hashOfConfig":"53"},{"size":797,"mtime":1611773998327,"results":"61","hashOfConfig":"53"},{"size":1268,"mtime":1611773954934,"results":"62","hashOfConfig":"53"},{"size":2672,"mtime":1613737343578,"results":"63","hashOfConfig":"53"},{"size":565,"mtime":1613307560847,"results":"64","hashOfConfig":"53"},{"size":1889,"mtime":1611770861386,"results":"65","hashOfConfig":"53"},{"size":1305,"mtime":1612895034841,"results":"66","hashOfConfig":"53"},{"size":2784,"mtime":1614241199480,"results":"67","hashOfConfig":"53"},{"size":4715,"mtime":1612200239603,"results":"68","hashOfConfig":"53"},{"size":488,"mtime":1612203779333,"results":"69","hashOfConfig":"53"},{"size":3061,"mtime":1612200233401,"results":"70","hashOfConfig":"53"},{"size":594,"mtime":1611850123852,"results":"71","hashOfConfig":"53"},{"size":1184,"mtime":1611690770514,"results":"72","hashOfConfig":"53"},{"size":577,"mtime":1611853137144,"results":"73","hashOfConfig":"53"},{"size":92,"mtime":1611853264648,"results":"74","hashOfConfig":"53"},{"size":1537,"mtime":1611857097312,"results":"75","hashOfConfig":"53"},{"size":1686,"mtime":1611853794523,"results":"76","hashOfConfig":"53"},{"size":3313,"mtime":1613112578668,"results":"77","hashOfConfig":"53"},{"size":905,"mtime":1611937248400,"results":"78","hashOfConfig":"53"},{"size":591,"mtime":1611849848953,"results":"79","hashOfConfig":"53"},{"size":768,"mtime":1613408769484,"results":"80","hashOfConfig":"53"},{"size":362,"mtime":1610712655538,"results":"81","hashOfConfig":"53"},{"size":795,"mtime":1611926881625,"results":"82","hashOfConfig":"53"},{"size":1649,"mtime":1613737423585,"results":"83","hashOfConfig":"53"},{"size":1131,"mtime":1612283678135,"results":"84","hashOfConfig":"53"},{"size":1109,"mtime":1611930147757,"results":"85","hashOfConfig":"53"},{"size":1558,"mtime":1611935672370,"results":"86","hashOfConfig":"53"},{"size":434,"mtime":1611937957410,"results":"87","hashOfConfig":"53"},{"size":7611,"mtime":1615041486049,"results":"88","hashOfConfig":"53"},{"size":1012,"mtime":1612966101103,"results":"89","hashOfConfig":"53"},{"size":139,"mtime":1612018929712,"results":"90","hashOfConfig":"53"},{"size":2103,"mtime":1615053932422,"results":"91","hashOfConfig":"53"},{"size":5165,"mtime":1613737428618,"results":"92","hashOfConfig":"53"},{"size":4090,"mtime":1613737399696,"results":"93","hashOfConfig":"53"},{"size":2704,"mtime":1613486377046,"results":"94","hashOfConfig":"53"},{"size":202,"mtime":1612635730886,"results":"95","hashOfConfig":"53"},{"size":3437,"mtime":1615055477630,"results":"96","hashOfConfig":"53"},{"size":783,"mtime":1613737360645,"results":"97","hashOfConfig":"53"},{"size":694,"mtime":1614270082739,"results":"98","hashOfConfig":"53"},{"size":1478,"mtime":1613487115920,"results":"99","hashOfConfig":"53"},{"size":1561,"mtime":1613738470296,"results":"100","hashOfConfig":"53"},{"size":91,"mtime":1613059736385,"results":"101","hashOfConfig":"53"},{"size":4256,"mtime":1613737563654,"results":"102","hashOfConfig":"53"},{"size":92,"mtime":1613066545866,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"j1c4be",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"114"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"109"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"114"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"109"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"109"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"117"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"151"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"120"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"114"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"109"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\index.js",[],["229","230"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\jumbotron.js",[],["231","232"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\jumbotron\\jumbotron.styles.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\footer\\footer.component.js",[],["233","234"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\footer.js",[],["235","236"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\footer\\footer.styles.js",[],["237","238"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\faqs.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\accordion\\accordion.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\opt-form\\optform.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\opt-form\\optform.styles.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\App.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\global_styles.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\accordion\\accordion.styles.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\home.js",["239"],"import React from 'react'\r\nimport { Link, Route } from 'react-router-dom'\r\nimport Feature from '../components/feature/feature.component'\r\nimport OptForm from '../components/opt-form/optform.component'\r\nimport FaqsContainer from '../containers/faqs'\r\nimport { FooterContainer } from '../containers/footer'\r\nimport HeaderContainer from '../containers/header'\r\nimport JumbotronContainer from '../containers/jumbotron'\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <div>\r\n            <HeaderContainer>\r\n                <Feature>\r\n                    <Feature.Title>Unlimited films, Tv programms and more</Feature.Title>\r\n                    <Feature.SubTitle>Watch More and Cancel at any time</Feature.SubTitle>\r\n                    <OptForm>\r\n                        <OptForm.Input placeholder=\"Email address\" />\r\n                        <Link to=\"/Signin\" ><OptForm.Button>Try it now</OptForm.Button></Link>\r\n                        <OptForm.Break />\r\n                        <OptForm.Text>Ready to watch? Enter your email to create or restart your membership.</OptForm.Text>\r\n                    </OptForm>\r\n                </Feature>\r\n\r\n            </HeaderContainer>\r\n            <JumbotronContainer />\r\n            <FaqsContainer />\r\n            <FooterContainer />\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\signin.js",["240","241","242","243"],"import React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Form from '../components/form/form.component';\r\nimport { FooterContainer } from '../containers/footer'\r\nimport HeaderContainer from '../containers/header'\r\nimport { FirebaseContext } from '../context/firebase';\r\nimport { ProfileContext } from '../context/profile.context';\r\n\r\nconst Signin = () => {\r\n    const history = useHistory();\r\n    const { firebase } = useContext(FirebaseContext);\r\n    const { showProfile, setShowProfile, loading, setLoading } = useContext(ProfileContext);\r\n    const [email, setEmail] = useState('h@gmail.com');\r\n    const [password, setPassword] = useState('123456');\r\n    const [error, setError] = useState('');\r\n\r\n    const isInvalid = password == '' || email == '';\r\n    const handleSignin = (event) => {\r\n        event.preventDefault();\r\n\r\n\r\n        return firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                setShowProfile(true);\r\n                setLoading(true);\r\n                history.push('/browse');\r\n            })\r\n            .catch((error) => {\r\n                setEmail('');\r\n                setPassword('');\r\n                setError(error.message);\r\n            });\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <HeaderContainer>\r\n                <Form>\r\n                    <Form.Title>Sign In</Form.Title>\r\n                    {error && <Form.Error>{error}</Form.Error>}\r\n                    <Form.Base onSubmit={handleSignin} method=\"post\">\r\n                        <Form.Input\r\n                            placeholder=\"Email Address\"\r\n                            value={email}\r\n                            type=\"email\"\r\n                            onChange={({ target }) => setEmail(target.value)}\r\n                        />\r\n                        <Form.Input\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            type=\"password\"\r\n                            onChange={({ target }) => setPassword(target.value)}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <Form.Submit disabled={isInvalid} type=\"submit\">Sign In</Form.Submit>\r\n\r\n                    </Form.Base>\r\n\r\n                    <Form.Text>\r\n                        New to Netflix? <Form.Link to=\"/signup\">Sign up now.</Form.Link>\r\n                    </Form.Text>\r\n                    <Form.TextSmall>\r\n                        This page is protected by Google reCAPTCHA to ensure you're not a bot. Learn more.\r\n          </Form.TextSmall>\r\n                </Form>\r\n            </HeaderContainer>\r\n            <FooterContainer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signin\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Header\\Header.styles.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\header.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Header\\Header.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\feature\\feature.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\jumbotron\\jumbotron.component.js",[],["244","245"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\lib\\firebase.prod.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\context\\firebase.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\form\\form.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\form\\form.styles.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\signup.js",["246","247","248"],"import React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Form from '../components/form/form.component';\r\nimport { FooterContainer } from '../containers/footer'\r\nimport HeaderContainer from '../containers/header'\r\nimport { FirebaseContext } from '../context/firebase';\r\n\r\nconst Signup = () => {\r\n\r\n    const history = useHistory();\r\n    const { firebase } = useContext(FirebaseContext);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [firstname, setFirstName] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const isInvalid = firstname == '' || email == '' || password == '';\r\n    const handleSignup = (event) => {\r\n        event.preventDefault();\r\n\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then((result) => {\r\n                result.user\r\n                    .updateProfile({\r\n                        displayName: firstname,\r\n                        photoURL: Math.floor(Math.random() * 5) + 1\r\n                    })\r\n                    .then(() => {\r\n                        history.push('/signin')\r\n                    })\r\n\r\n\r\n            })\r\n            .catch((error) => {\r\n                setEmail('');\r\n                setPassword('');\r\n                setFirstName('');\r\n                setError(error.message);\r\n            });\r\n\r\n    }\r\n    return (\r\n\r\n        <>\r\n            <HeaderContainer>\r\n                <Form>\r\n                    <Form.Title>Sign up</Form.Title>\r\n                    {error && <Form.Error>{error}</Form.Error>}\r\n                    <Form.Base onSubmit={handleSignup} method=\"post\">\r\n                        <Form.Input\r\n                            placeholder=\"First Name\"\r\n                            value={firstname}\r\n                            type=\"text\"\r\n                            onChange={({ target }) => setFirstName(target.value)}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <Form.Input\r\n                            placeholder=\"Email Address\"\r\n                            value={email}\r\n                            type=\"email\"\r\n                            onChange={({ target }) => setEmail(target.value)}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <Form.Input\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            type=\"password\"\r\n                            onChange={({ target }) => setPassword(target.value)}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <Form.Submit disabled={isInvalid} type=\"submit\">Sign up</Form.Submit>\r\n\r\n                    </Form.Base>\r\n\r\n                    <Form.Text>\r\n                        already a member? <Form.Link to=\"/signin\">Sign In.</Form.Link>\r\n                    </Form.Text>\r\n                    <Form.TextSmall>\r\n                        This page is protected by Google reCAPTCHA to ensure you're not a bot. Learn more.\r\n          </Form.TextSmall>\r\n                </Form>\r\n            </HeaderContainer>\r\n            <FooterContainer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\helpers\\routes.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\feature\\feature.styles.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\hooks\\use-auth-listener.js",["249"],"import { useContext, useEffect, useState } from 'react'\r\nimport { FirebaseContext } from '../context/firebase';\r\n\r\nexport const UseAuthListener = () => {\r\n\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\r\n\r\n    const { firebase } = useContext(FirebaseContext);\r\n\r\n    useEffect(() => {\r\n        const listener = firebase.auth().onAuthStateChanged((authUser) => {\r\n            if (authUser) {\r\n                localStorage.setItem('authUser', JSON.stringify(authUser));\r\n                setUser(authUser);\r\n            }\r\n            else {\r\n                localStorage.removeItem('authUser');\r\n                setUser(null);\r\n            }\r\n        });\r\n        return () => listener();\r\n    }, []);\r\n\r\n    return { user };\r\n\r\n}\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\reportWebVitals.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\hooks\\use-content.js",["250","251"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { FirebaseContext } from '../context/firebase';\r\n\r\nexport const UseContent = (target) => {\r\n\r\n    const [content, setContent] = useState();\r\n    const { firebase } = useContext(FirebaseContext);\r\n\r\n    useEffect(() => {\r\n        firebase.firestore()\r\n            .collection(target)\r\n            .get()\r\n            .then((snapshot) => {\r\n                const allcontent = snapshot.docs.map((contenObj) => ({\r\n                    ...contenObj.data(),\r\n                    docId: contenObj.id,\r\n                }));\r\n                setContent(allcontent);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }, []);\r\n    return {\r\n        [target]: content\r\n    }\r\n}\r\n",["252","253"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\profile.js",["254","255"],"import React, { useContext } from 'react'\r\nimport Header from '../components/Header/Header.component'\r\nimport Profiles from '../components/profiles/profiles.component';\r\nimport { ProfileContext } from '../context/profile.context';\r\nimport logo from '../logo.svg';\r\n\r\nconst ProfileContainer = ({ user, setProfile }) => {\r\n\r\n    const { showProfile, setShowProfile } = useContext(ProfileContext);\r\n    // console.log(\"showProfile\", showProfile);\r\n    const newStyle = {\r\n        zIndex: \"1000\",\r\n        backgroundColor: \"black\"\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Header bg={false}>\r\n                <Header.Frame style={{\r\n                    zIndex: \"1000\",\r\n                    backgroundColor: \"black\",\r\n                    position: \"relative\",\r\n                    margin: \"0\",\r\n                    padding: \"20px\"\r\n                }}>\r\n                    <Header.Logo to=\"/\" alt=\"Netflix\" src={logo} />\r\n                </Header.Frame>\r\n            </Header>\r\n\r\n            <Profiles >\r\n                <Profiles.Title>Who's Watching</Profiles.Title>\r\n                <Profiles.List>\r\n                    <Profiles.User>\r\n                        <Profiles.Picture onClick={() => {\r\n                            setProfile({ displayName: user.displayName, photoURL: user.photoURL });\r\n                            setShowProfile(false);\r\n                        }} src={user.photoURL} />\r\n                        <Profiles.Name>{user.displayName}</Profiles.Name>\r\n                    </Profiles.User>\r\n                </Profiles.List>\r\n            </Profiles>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProfileContainer\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\profiles\\profiles.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\profiles\\profiles.styles.js",[],["256","257"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\loading\\loading.styles.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\loading\\loading.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Row\\Row.component.js",["258"],"import axios from '../../axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport './row.styles.css';\r\nimport Carousel from 'react-multi-carousel';\r\nimport 'react-multi-carousel/lib/styles.css';\r\nimport ButtonGroup from '../Button_Group/ButtonGroup';\r\nimport CarouselItem from '../Carousel/Carousel.item';\r\n\r\n\r\n\r\nconst responsive = {\r\n    superLargeDesktop: {\r\n        breakpoint: { max: 4000, min: 3000 },\r\n        items: 8,\r\n        slidesToSlide: 3,\r\n    },\r\n    desktop: {\r\n        breakpoint: { max: 3000, min: 1060 },\r\n        items: 5.5,\r\n        slidesToSlide: 3,\r\n    },\r\n    tablet: {\r\n        breakpoint: { max: 1060, min: 800 },\r\n        items: 4,\r\n        slidesToSlide: 1,\r\n    },\r\n    smallerDevice: {\r\n        breakpoint: { max: 800, min: 500 },\r\n        items: 3,\r\n        slidesToSlide: 1,\r\n    },\r\n    mobile: {\r\n        breakpoint: { max: 500, min: 0 },\r\n        items: 2,\r\n        slidesToSlide: 1,\r\n    },\r\n};\r\n\r\n\r\nconst Row = ({ title, fetchUrl, isLargeRow, BackdropHandler, playHandler }) => {\r\n\r\n    const baseImgUrl = 'https://image.tmdb.org/t/p/original/';\r\n    const [movies, setMovies] = useState([]);\r\n    // const [trailerUrl, setTrailerUrl] = useState('');\r\n    // const [showDetails, setShowDetails] = useState(false);\r\n    // const [movie, setmovie] = useState('');\r\n    // console.log('movies', movies);\r\n\r\n    useEffect(() => {\r\n\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            // console.log('movies', request.data.results);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n\r\n    }, [fetchUrl]);\r\n\r\n\r\n\r\n    // const handleShowVideo = async () => {\r\n\r\n    //     try {\r\n    //         const TvVid = await axios.get(`https://api.themoviedb.org/3/tv/${movie.id}/videos?api_key=9d2bff12ed955c7f1f74b83187f188ae`)\r\n    //         console.table('TvVid->', TvVid.data.results[TvVid.data.results.length - 1].key);\r\n    //         setTrailerUrl(TvVid.data.results[0].key);\r\n    //     }\r\n    //     catch {\r\n\r\n    //         try {\r\n    //             const movieVid = await axios.get(`https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=9d2bff12ed955c7f1f74b83187f188ae`);\r\n    //             console.table('movieVid -> ', movieVid.data.results[0].key);\r\n    //             setTrailerUrl(movieVid.data.results[0].key);\r\n\r\n    //         }\r\n    //         catch {\r\n    //             console.log(\"ERROR\");\r\n    //         }\r\n\r\n    //     }\r\n\r\n\r\n    //                     // movieTrailer(movie?.name || movie?.original_title || movie?.title || \"\")\r\n    //                     //     .then((url) => {\r\n    //                     //         // console.log(movie?.name)\r\n    //                     //         // console.log('url', url);\r\n    //                     //         if (!url) {\r\n    //                     //             setTrailerUrl()\r\n    //                     //         }\r\n    //                     //         const urlParam = new URLSearchParams(new URL(url).search);\r\n    //                     //         setTrailerUrl(urlParam.get('v'));\r\n    //                     //     }).catch(error =>\r\n    //                     //         console.log(error));\r\n    //     setShowDetails(false);\r\n\r\n    // }\r\n    const HandlePlay = (movie) => {\r\n        playHandler(movie);\r\n    }\r\n\r\n    const handleClick = (movie) => {\r\n        BackdropHandler(movie);\r\n\r\n        // if (trailerUrl || showDetails) {\r\n        //     setTrailerUrl('');\r\n        //     setShowDetails(false);\r\n        //     setmovie('');\r\n        // }\r\n        // else {\r\n        //     // console.log('movie', movie?.name)\r\n        //     // movieTrailer(movie?.name || movie?.original_title || movie?.title || \"\")\r\n        //     //     .then((url) => {\r\n        //     //         // console.log(movie?.name)\r\n        //     //         // console.log('url', url);\r\n        //     //         const urlParam = new URLSearchParams(new URL(url).search);\r\n        //     //         setTrailerUrl(urlParam.get('v'));\r\n        //     //     }).catch(error =>\r\n        //     //         console.log(error));\r\n        //     setShowDetails(true);\r\n        //     setmovie(movie);\r\n        // }\r\n    }\r\n\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n    }\r\n\r\n    // const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n    // const checkNext = () => {\r\n    //     const labels = document.querySelectorAll('#slider label');\r\n    //     const nextIndex = selectedIndex === (labels.length - 1) ? 0 : selectedIndex + 1;\r\n    //     setSelectedIndex(nextIndex);\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"row\" >\r\n            <h1 style={{ marginTop: '2rem', marginBottom: \"0px\" }}>{title}</h1>\r\n\r\n            <Carousel\r\n                swipeable\r\n                draggable\r\n                arrows={false}\r\n                responsive={responsive}\r\n                customButtonGroup={<ButtonGroup />}\r\n                ssr={true} // means to render carousel on server-side.\r\n                infinite={true}\r\n                autoPlay={false}\r\n                autoPlaySpeed={1000}\r\n                keyBoardControl={true}\r\n                customTransition=\"all .8s ease-in-out\"\r\n                transitionDuration={1000}\r\n                containerClass=\"carousel-container row-posters hover-container\"\r\n                removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                deviceType={''}\r\n                customDot={null}\r\n                showDots={false}\r\n                itemClass=\"carousel-item row-poster hover-item\"\r\n            >\r\n\r\n\r\n\r\n\r\n                {\r\n                    movies.map((movie) => {\r\n                        return (\r\n\r\n                            // <img\r\n                            //     key={movie.id}\r\n                            //     onClick={() => handleClick(movie)}\r\n                            //     className={`row-poster ${isLargeRow ? 'row-poster-large' : ''}`}\r\n                            //     src={`${baseImgUrl}${isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                            //         }`}\r\n                            //     alt={movie.name}\r\n                            // />\r\n                            <CarouselItem\r\n                                key={movie.id}\r\n                                movie={movie}\r\n                                image={baseImgUrl + movie.poster_path}\r\n                                handleItemExpand={handleClick}\r\n                                HandlePlay={HandlePlay}\r\n                                title={movie.title}\r\n\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n\r\n\r\n            </Carousel>\r\n            {/* \r\n            {\r\n                showDetails &&\r\n                <div className=\"details\">\r\n\r\n                    <img\r\n                        className=\"detail-image\"\r\n                        src={`${baseImgUrl}${movie.poster_path}`}\r\n                        alt={movie?.name}\r\n                    />\r\n\r\n                    <div className=\"detail-text\">\r\n                        <h2>{movie?.name || movie?.original_title || movie?.title}</h2>\r\n                        <h5>{truncate(movie?.overview, 500)}</h5>\r\n                        <button className=\"detail-button\" onClick={() => handleShowVideo()}>Play</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />} */}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Row\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\request.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\axios.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\banner\\banner.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\Row.container.js",["259","260","261"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport Banner from '../components/banner/banner.component'\r\nimport Loading from '../components/loading/loading.component';\r\nimport Modal from '../components/modal/modal.component';\r\nimport ModalDetails from '../components/modal/modalDetails.component';\r\nimport Row from '../components/Row/Row.component'\r\nimport { FirebaseContext } from '../context/firebase';\r\nimport { ProfileContext } from '../context/profile.context';\r\nimport requests from '../request';\r\nimport ProfileContainer from './profile';\r\n\r\n\r\n\r\n\r\nconst RowContainer = () => {\r\n\r\n    const { showProfile, setShowProfile, loading, setLoading } = useContext(ProfileContext);\r\n    const { firebase } = useContext(FirebaseContext);\r\n    const user = firebase.auth().currentUser || {};\r\n\r\n    const [profile, setProfile] = useState({});\r\n    // const [loading, setloading] = useState(true);\r\n    const [backdrop, setBackdrop] = useState(false);\r\n    const [play, setplay] = useState(false);\r\n    const [movie, setMovie] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        if (!showProfile) {\r\n\r\n            setTimeout(() => {\r\n                setLoading(false);\r\n            }, 3000)\r\n        }\r\n    }, [showProfile]);\r\n\r\n\r\n    function BackdropHandler(movie) {\r\n        setMovie(movie);\r\n        // console.log(\"backdrop clicked\");\r\n        // console.log(backdrop, movie);\r\n        setBackdrop(true);\r\n    }\r\n\r\n    function playHandler(movie) {\r\n        setplay(true);\r\n        BackdropHandler(movie);\r\n    }\r\n\r\n    function onCloseHandler() {\r\n        setBackdrop(false);\r\n        setplay(false);\r\n    }\r\n\r\n\r\n    // console.log(\"loading\", loading);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !showProfile ?\r\n                    (<>\r\n                        {\r\n                            loading ?\r\n                                (<Loading src={user.photoURL} />) : <Loading.ReleaseBody />\r\n                        }\r\n\r\n                        <Banner BackdropHandler={playHandler} />\r\n\r\n                        {\r\n                            backdrop &&\r\n                            (\r\n\r\n                                <Modal\r\n                                    show={backdrop}\r\n                                    close={onCloseHandler}\r\n                                    movie={movie}\r\n                                >\r\n                                    <ModalDetails movie={movie} playNow={play} />\r\n                                </Modal>\r\n                            )\r\n                        }\r\n\r\n\r\n\r\n                        <Row title={'Trending Now'}\r\n                            fetchUrl={requests.fetchTrending}\r\n                            isLargeRow\r\n                            BackdropHandler={BackdropHandler}\r\n                            playHandler={playHandler}\r\n                        />\r\n                        <Row\r\n                            title={'Anime'}\r\n                            fetchUrl={requests.fetchAnime}\r\n                            BackdropHandler={BackdropHandler}\r\n                            playHandler={playHandler}\r\n                        />\r\n                        <Row\r\n                            title={'Top Rated'}\r\n                            fetchUrl={requests.fetchTopRated}\r\n                            BackdropHandler={BackdropHandler}\r\n                            playHandler={playHandler}\r\n                        />\r\n                        <Row\r\n                            title={'Netflix Originals'}\r\n                            fetchUrl={requests.fetchNetflixOriginals}\r\n                            BackdropHandler={BackdropHandler}\r\n                            playHandler={playHandler}\r\n                        />\r\n                        <Row\r\n                            title={'Comedy Movies'}\r\n                            fetchUrl={requests.fetchComedyMovies}\r\n                            BackdropHandler={BackdropHandler}\r\n                            playHandler={playHandler}\r\n                        />\r\n                        <Row\r\n                            title={'Action Movies'}\r\n                            fetchUrl={requests.fetchActionMovies}\r\n                            BackdropHandler={BackdropHandler}\r\n                            playHandler={playHandler}\r\n                        />\r\n                        <Row\r\n                            title={'Horror Movies'}\r\n                            fetchUrl={requests.fetchHorrorMovies}\r\n                            BackdropHandler={BackdropHandler}\r\n                            playHandler={playHandler}\r\n                        />\r\n                        <Row\r\n                            title={'Romance Movies'}\r\n                            fetchUrl={requests.fetchRomanceMovies}\r\n                            BackdropHandler={BackdropHandler}\r\n                            playHandler={playHandler}\r\n                        />\r\n\r\n\r\n\r\n                       )\r\n                    </>\r\n                    )\r\n                    : (<ProfileContainer user={user} setProfile={setProfile} />)\r\n            }\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RowContainer\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Navbar\\navbar.component.js",["262","263","264","265","266","267","268","269"],"import React, { createContext, useContext, useEffect, useState } from 'react'\r\nimport logo from '../../logo.svg';\r\nimport { FirebaseContext } from '../../context/firebase';\r\nimport './navbar.styles.css';\r\nimport { Picture, Dropdown, Link, Group, Profile, Search, SearchIcon, SearchInput } from './navbar.style';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useLocation } from 'react-router-dom';\r\nimport { SearchContext } from '../../context/search.context';\r\nimport { Link as RouteLink } from 'react-router-dom';\r\n\r\n\r\nconst Navbar = ({ }) => {\r\n\r\n    const { searchQuery, setSearchQuery } = useContext(SearchContext);\r\n\r\n    const location = useLocation();\r\n\r\n\r\n    // const searchContext = createContext(null);\r\n    const history = useHistory();\r\n\r\n    const { firebase } = useContext(FirebaseContext);\r\n\r\n    const user = firebase.auth().currentUser || {};\r\n    // console.log(\"user--->\", user);\r\n\r\n    const [profile, setProfile] = useState({});\r\n    const [loading, setloading] = useState(true);\r\n    const [show, handleShow] = useState(false);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n\r\n\r\n    if (searchTerm?.length > 0 && location.pathname != '/ResultPage') {\r\n        history.push('/ResultPage');\r\n    }\r\n    else if (searchTerm?.length === 0 && location.pathname != '/browse') {\r\n        history.push('/browse');\r\n    }\r\n\r\n\r\n    function rem() {\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(\"user\", profile)\r\n        setTimeout(() => {\r\n            setloading(false);\r\n        }, 3000)\r\n    }, [profile.displayName]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setSearchQuery(searchTerm);\r\n    }, [searchTerm]);\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 150) {\r\n                handleShow(true);\r\n            }\r\n            else {\r\n                handleShow(false);\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', rem);\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"navbar\" className={`nav ${show && 'nav_black'}`}>\r\n            <RouteLink to=\"/browse\" onClick={() => setSearchTerm('')}>\r\n                <img\r\n                    className=\"nav_logo\"\r\n                    src={logo}\r\n                    alt=\"netflix logo\"\r\n                />\r\n            </RouteLink>\r\n            <Navbar.Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n            <Profile>\r\n\r\n                <img\r\n                    className=\"nav_avtaar\"\r\n                    src={`/images/users/${user.photoURL}.png`}\r\n                    alt=\"avtaar\"\r\n                />\r\n                <Dropdown>\r\n                    <Group>\r\n                        <Picture src={`/images/users/${user.photoURL}.png`} />\r\n                        <Link>{user.displayName}</Link>\r\n                    </Group>\r\n                    <Group>\r\n                        <Link onClick={() => firebase.auth().signOut()}>Sign out</Link>\r\n                    </Group>\r\n                </Dropdown>\r\n            </Profile>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n\r\nNavbar.Search = function NavbarSearch({ searchTerm, setSearchTerm, ...restProps }) {\r\n    const [searchActive, setSearchActive] = useState(false);\r\n\r\n    const onChange = e => {\r\n        e.persist();\r\n        setSearchTerm(e.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // console.log(\"Search message inside useEffect: \", searchTerm);\r\n    }, [searchTerm]);\r\n\r\n    return (\r\n        <Search {...restProps}>\r\n            <SearchIcon onClick={() => setSearchActive((searchActive) => !searchActive)} data-testid=\"search-click\">\r\n                <img src=\"/images/icons/search.png\" alt=\"Search\" />\r\n            </SearchIcon>\r\n            <SearchInput\r\n                value={searchTerm}\r\n                onChange={onChange}\r\n                placeholder=\"Search Movies and Series\"\r\n                active={searchActive}\r\n                data-testid=\"search-input\"\r\n                autoFocus\r\n            />\r\n        </Search>\r\n    );\r\n};\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Navbar\\navbar.style.js",["270"],"import styled from 'styled-components/macro';\r\nimport { Link as ReactRouterLink } from 'react-router-dom';\r\n\r\n\r\nexport const Group = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Link = styled.p`\r\n  color: #fff;\r\n  text-decoration: none;\r\n  margin-right: 30px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    font-weight: bold;\r\n  }\r\n  &:last-of-type {\r\n    margin-right: 0;\r\n  }\r\n`;\r\n\r\nexport const Picture = styled.button`\r\nbackground: url(${({ src }) => src});\r\nbackground-repeat:no-repeat;\r\nbackground-size: cover;\r\nborder: 0;\r\nwidth: 32px;\r\nheight: 32px;\r\ncursor: pointer;\r\n`;\r\n\r\nexport const Dropdown = styled.div`\r\ndisplay: none;\r\nposition: fixed;\r\nbackground-color: black;\r\npadding: 10px;\r\nwidth: 200px;\r\ntop: 3em;\r\nright: 10px;\r\n${Group}:last-of-type ${Link} {\r\n  cursor: pointer;\r\n}\r\n${Group} {\r\n  margin-bottom: 10px;\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n  ${Link} {\r\n    cursor: pointer;\r\n  }\r\n  ${Picture} {\r\n    cursor: default;\r\n  }\r\n}\r\nbutton {\r\n  margin-right: 10px;\r\n}\r\np {\r\n  font-size: 12px;\r\n  margin-bottom: 0;\r\n  margin-top: 0;\r\n}\r\n`;\r\n\r\nexport const Profile = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin-left: 20px;\r\nposition: relative;\r\nbutton {\r\n  cursor: pointer;\r\n}\r\n&:hover > ${Dropdown} {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n`;\r\n\r\n\r\nexport const SearchInput = styled.input`\r\n  background-color: rgba(64, 64, 64, 0.5);\r\n  color: white;\r\n  border: 1px solid white;\r\n  transition: width 0.5s;\r\n  height: 30px;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  margin-left: ${({ active }) => (active === true ? '1rem' : '0')};\r\n  padding: ${({ active }) => (active === true ? '0 0.5rem' : '0')};\r\n  opacity: ${({ active }) => (active === true ? '1' : '0')};\r\n  width: ${({ active }) => (active === true ? '11rem' : '0px')};\r\n  &:focus {\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n  }\r\n  @media (max-width: 700px) {\r\n    margin-left: ${({ active }) => (active === true ? '0.6rem' : '0')};\r\n  padding: ${({ active }) => (active === true ? '0 0.5rem' : '0')};\r\n  opacity: ${({ active }) => (active === true ? '1' : '0')};\r\n  width: ${({ active }) => (active === true ? '8rem' : '0px')};\r\n  }\r\n`;\r\n\r\nexport const Search = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  position:fixed;\r\n  right:6rem;\r\n  svg {\r\n    color: white;\r\n    cursor: pointer;\r\n  }\r\n  @media (max-width: 700px) {\r\n   \r\n  }\r\n`;\r\n\r\nexport const SearchIcon = styled.button`\r\n  cursor: pointer;\r\n  background-color: transparent;\r\n  border: 0;\r\n  outline: 0;\r\n  height: 32px;\r\n  width: 32px;\r\n  padding: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  img {\r\n    filter: brightness(0) invert(1);\r\n    width: 16px;\r\n  }\r\n`;","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\modal\\backdrop.js",[],["271","272"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\modal\\modalDetails.component.js",["273"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\modal\\modal.component.js",["274"],"import React from 'react';\r\nimport './modal.css'\r\nimport Backdrop from './backdrop';\r\n\r\nconst Modal = (props) => {\r\n    // console.log(props)\r\n    const url = 'https://image.tmdb.org/t/p/original' + `${props.movie.backdrop_path ? props.movie.backdrop_path : props.movie.poster_path}`;\r\n    const backgroundStyle = {\r\n        backgroundImage: `url(${url})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: \"center\",\r\n    }\r\n    return (\r\n        <>\r\n            <Backdrop show={props.show} toggleBackdrop={props.close} />\r\n            <div\r\n                style={backgroundStyle}\r\n                className={(props.show ? \"modal show\" : \"modal hide\")}\r\n            >\r\n                {props.children}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Button_Group\\ButtonGroup.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Carousel\\Carousel.item.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Search\\search.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\context\\search.context.js",[],["275","276"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\search\\Search.js",["277","278"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport SearchComponent from '../../components/Search/search.component';\r\nimport { SearchContext } from '../../context/search.context';\r\nimport axios from '../../axios';\r\nimport './search.scss'\r\nimport Modal from '../../components/modal/modal.component';\r\nimport ModalDetails from '../../components/modal/modalDetails.component';\r\n\r\n\r\nconst Search = () => {\r\n\r\n    const API_KEY = 'cd53523310f1c138c91a1e2e2b1101f3';\r\n    const baseImgUrl = 'https://image.tmdb.org/t/p/original/';\r\n    const { searchQuery, setSearchQuery } = useContext(SearchContext);\r\n    // console.log(\"search -> \", searchQuery);\r\n\r\n    const [searchItems, setSearchItems] = useState([]);\r\n\r\n    // console.log(\"searchQuery - \", searchQuery);\r\n\r\n    const [backdrop, setBackdrop] = useState(false);\r\n    const [play, setplay] = useState(false);\r\n    const [movie, setMovie] = useState('');\r\n\r\n\r\n    function BackdropHandler(movie) {\r\n        setMovie(movie);\r\n        // console.log(\"backdrop clicked\");\r\n        // console.log(backdrop, movie);\r\n        setBackdrop(true);\r\n    }\r\n\r\n    function playHandler(movie) {\r\n        setplay(true);\r\n        BackdropHandler(movie);\r\n    }\r\n\r\n    function onCloseHandler() {\r\n        setBackdrop(false);\r\n        setplay(false);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        async function changeQuery() {\r\n            let value = searchQuery.split(\" \").join(\"%20\");\r\n            // console.log(\"value \", searchQuery);\r\n            const url = `/search/multi?api_key=${API_KEY}&language=en-US&query=${value}&page=1&include_adult=false`;\r\n            const request = await axios.get(url);\r\n            setSearchItems(request.data.results);\r\n            // console.log('Search items -> ', request.data.results);\r\n            return request;\r\n        }\r\n\r\n        changeQuery();\r\n\r\n    }, [searchQuery])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                backdrop &&\r\n                (\r\n\r\n                    <Modal\r\n                        show={backdrop}\r\n                        close={onCloseHandler}\r\n                        movie={movie}\r\n                    >\r\n                        <ModalDetails movie={movie} playNow={play} />\r\n                    </Modal>\r\n                )\r\n            }\r\n\r\n\r\n\r\n            <div className=\"search-page\">\r\n                <h1></h1>\r\n                <h1 className=\"search-page__title\">Search Results</h1>\r\n                <div className=\"search-page__outer\">\r\n                    {\r\n                        searchItems?.length === 0 ?\r\n                            <div style={{ color: \"white\", marginLeft: \"0%\", lineHeight: \"3\" }}>\r\n                                <h2>No Search Result available</h2>\r\n                                <ul>\r\n                                    <li><h4>Try different keyword</h4></li>\r\n                                    <li><h4>keyword may have some spelling error</h4></li>\r\n                                    <li><h4>Internet may be slow</h4></li>\r\n                                </ul>\r\n                            </div>\r\n                            :\r\n                            (\r\n                                <div className=\"search-page__inner\">\r\n                                    {\r\n\r\n\r\n                                        searchItems.map(item =>\r\n                                            item.poster_path\r\n                                                ?\r\n                                                <SearchComponent\r\n                                                    key={item.id}\r\n                                                    item={item}\r\n                                                    image={baseImgUrl + item.poster_path}\r\n                                                    handleItemExpand={BackdropHandler}\r\n                                                    HandlePlay={playHandler}\r\n                                                    title={item.title} /> : null\r\n                                        )\r\n\r\n\r\n\r\n                                    }\r\n                                </div>\r\n                            )\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\context\\profile.context.js",[],["279","280"],{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"281","replacedBy":"285"},{"ruleId":"283","replacedBy":"286"},{"ruleId":"281","replacedBy":"287"},{"ruleId":"283","replacedBy":"288"},{"ruleId":"281","replacedBy":"289"},{"ruleId":"283","replacedBy":"290"},{"ruleId":"281","replacedBy":"291"},{"ruleId":"283","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":2,"column":16,"nodeType":"295","messageId":"296","endLine":2,"endColumn":21},{"ruleId":"293","severity":1,"message":"297","line":12,"column":13,"nodeType":"295","messageId":"296","endLine":12,"endColumn":24},{"ruleId":"293","severity":1,"message":"298","line":12,"column":42,"nodeType":"295","messageId":"296","endLine":12,"endColumn":49},{"ruleId":"299","severity":1,"message":"300","line":17,"column":32,"nodeType":"301","messageId":"302","endLine":17,"endColumn":34},{"ruleId":"299","severity":1,"message":"300","line":17,"column":47,"nodeType":"301","messageId":"302","endLine":17,"endColumn":49},{"ruleId":"281","replacedBy":"303"},{"ruleId":"283","replacedBy":"304"},{"ruleId":"299","severity":1,"message":"300","line":18,"column":33,"nodeType":"301","messageId":"302","endLine":18,"endColumn":35},{"ruleId":"299","severity":1,"message":"300","line":18,"column":48,"nodeType":"301","messageId":"302","endLine":18,"endColumn":50},{"ruleId":"299","severity":1,"message":"300","line":18,"column":66,"nodeType":"301","messageId":"302","endLine":18,"endColumn":68},{"ruleId":"305","severity":1,"message":"306","line":22,"column":8,"nodeType":"307","endLine":22,"endColumn":10,"suggestions":"308"},{"ruleId":"293","severity":1,"message":"309","line":1,"column":8,"nodeType":"295","messageId":"296","endLine":1,"endColumn":13},{"ruleId":"305","severity":1,"message":"310","line":23,"column":8,"nodeType":"307","endLine":23,"endColumn":10,"suggestions":"311"},{"ruleId":"281","replacedBy":"312"},{"ruleId":"283","replacedBy":"313"},{"ruleId":"293","severity":1,"message":"297","line":9,"column":13,"nodeType":"295","messageId":"296","endLine":9,"endColumn":24},{"ruleId":"293","severity":1,"message":"314","line":11,"column":11,"nodeType":"295","messageId":"296","endLine":11,"endColumn":19},{"ruleId":"281","replacedBy":"315"},{"ruleId":"283","replacedBy":"316"},{"ruleId":"293","severity":1,"message":"317","line":126,"column":14,"nodeType":"295","messageId":"296","endLine":126,"endColumn":22},{"ruleId":"293","severity":1,"message":"318","line":17,"column":26,"nodeType":"295","messageId":"296","endLine":17,"endColumn":40},{"ruleId":"293","severity":1,"message":"319","line":21,"column":12,"nodeType":"295","messageId":"296","endLine":21,"endColumn":19},{"ruleId":"305","severity":1,"message":"320","line":35,"column":8,"nodeType":"307","endLine":35,"endColumn":21,"suggestions":"321"},{"ruleId":"293","severity":1,"message":"322","line":1,"column":17,"nodeType":"295","messageId":"296","endLine":1,"endColumn":30},{"ruleId":"323","severity":1,"message":"324","line":13,"column":17,"nodeType":"325","messageId":"302","endLine":13,"endColumn":20},{"ruleId":"293","severity":1,"message":"326","line":15,"column":13,"nodeType":"295","messageId":"296","endLine":15,"endColumn":24},{"ruleId":"293","severity":1,"message":"327","line":28,"column":21,"nodeType":"295","messageId":"296","endLine":28,"endColumn":31},{"ruleId":"293","severity":1,"message":"298","line":29,"column":12,"nodeType":"295","messageId":"296","endLine":29,"endColumn":19},{"ruleId":"299","severity":1,"message":"328","line":35,"column":53,"nodeType":"301","messageId":"302","endLine":35,"endColumn":55},{"ruleId":"299","severity":1,"message":"328","line":38,"column":60,"nodeType":"301","messageId":"302","endLine":38,"endColumn":62},{"ruleId":"305","severity":1,"message":"329","line":58,"column":8,"nodeType":"307","endLine":58,"endColumn":20,"suggestions":"330"},{"ruleId":"293","severity":1,"message":"331","line":2,"column":18,"nodeType":"295","messageId":"296","endLine":2,"endColumn":33},{"ruleId":"281","replacedBy":"332"},{"ruleId":"283","replacedBy":"333"},{"ruleId":"299","severity":1,"message":"300","line":52,"column":17,"nodeType":"301","messageId":"302","endLine":52,"endColumn":19},{"ruleId":"334","severity":1,"message":"335","line":7,"column":55,"nodeType":"301","messageId":"336","endLine":7,"endColumn":56},{"ruleId":"281","replacedBy":"337"},{"ruleId":"283","replacedBy":"338"},{"ruleId":"293","severity":1,"message":"339","line":14,"column":26,"nodeType":"295","messageId":"296","endLine":14,"endColumn":40},{"ruleId":"340","severity":1,"message":"341","line":78,"column":17,"nodeType":"342","endLine":78,"endColumn":21},{"ruleId":"281","replacedBy":"343"},{"ruleId":"283","replacedBy":"344"},"no-native-reassign",["345"],"no-negated-in-lhs",["346"],["345"],["346"],["345"],["346"],["345"],["346"],["345"],["346"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'showProfile' is assigned a value but never used.","'loading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["345"],["346"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.","ArrayExpression",["347"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'firebase' and 'target'. Either include them or remove the dependency array.",["348"],["345"],["346"],"'newStyle' is assigned a value but never used.",["345"],["346"],"'truncate' is defined but never used.","'setShowProfile' is assigned a value but never used.","'profile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setLoading'. Either include it or remove the dependency array.",["349"],"'createContext' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'searchQuery' is assigned a value but never used.","'setProfile' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'setSearchQuery'. Either include it or remove the dependency array.",["350"],"'ReactRouterLink' is defined but never used.",["345"],["346"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",["345"],["346"],"'setSearchQuery' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["345"],["346"],"no-global-assign","no-unsafe-negation",{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},"Update the dependencies array to be: [firebase]",{"range":"359","text":"360"},"Update the dependencies array to be: [firebase, target]",{"range":"361","text":"362"},"Update the dependencies array to be: [setLoading, showProfile]",{"range":"363","text":"364"},"Update the dependencies array to be: [searchTerm, setSearchQuery]",{"range":"365","text":"366"},[733,735],"[firebase]",[738,740],"[firebase, target]",[1224,1237],"[setLoading, showProfile]",[1646,1658],"[searchTerm, setSearchQuery]"]