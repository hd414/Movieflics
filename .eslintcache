[{"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\index.js":"1","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\jumbotron.js":"2","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\jumbotron\\jumbotron.styles.js":"3","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\footer\\footer.component.js":"4","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\footer.js":"5","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\footer\\footer.styles.js":"6","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\faqs.js":"7","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\accordion\\accordion.component.js":"8","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\opt-form\\optform.component.js":"9","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\opt-form\\optform.styles.js":"10","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\App.js":"11","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\global_styles.js":"12","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\accordion\\accordion.styles.js":"13","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\home.js":"14","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\signin.js":"15","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Header\\Header.styles.js":"16","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\header.js":"17","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Header\\Header.component.js":"18","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\feature\\feature.component.js":"19","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\jumbotron\\jumbotron.component.js":"20","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\lib\\firebase.prod.js":"21","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\context\\firebase.js":"22","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\form\\form.component.js":"23","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\form\\form.styles.js":"24","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\signup.js":"25","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\helpers\\routes.js":"26","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\feature\\feature.styles.js":"27","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\hooks\\use-auth-listener.js":"28","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\reportWebVitals.js":"29","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\hooks\\use-content.js":"30","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\profile.js":"31","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\profiles\\profiles.component.js":"32","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\profiles\\profiles.styles.js":"33","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\loading\\loading.styles.js":"34","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\loading\\loading.component.js":"35","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Row\\Row.component.js":"36","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\request.js":"37","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\axios.js":"38","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\banner\\banner.component.js":"39","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\Row.container.js":"40","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Navbar\\navbar.component.js":"41","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Navbar\\navbar.style.js":"42","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\modal\\backdrop.js":"43","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\modal\\modalDetails.component.js":"44","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\modal\\modal.component.js":"45","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Button_Group\\ButtonGroup.js":"46","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Carousel\\Carousel.item.js":"47","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Search\\search.component.js":"48","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\context\\search.context.js":"49","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\search\\Search.js":"50","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\context\\profile.context.js":"51","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\MyList\\list.js":"52","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\context\\api.context.js":"53","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\TvShows.container.js":"54"},{"size":862,"mtime":1620673719418,"results":"55","hashOfConfig":"56"},{"size":1033,"mtime":1611692210548,"results":"57","hashOfConfig":"56"},{"size":1217,"mtime":1611773565198,"results":"58","hashOfConfig":"56"},{"size":1185,"mtime":1611768378251,"results":"59","hashOfConfig":"56"},{"size":1899,"mtime":1621841234253,"results":"60","hashOfConfig":"56"},{"size":1008,"mtime":1611768030530,"results":"61","hashOfConfig":"56"},{"size":1345,"mtime":1620629767364,"results":"62","hashOfConfig":"56"},{"size":1902,"mtime":1611772964268,"results":"63","hashOfConfig":"56"},{"size":797,"mtime":1611773998327,"results":"64","hashOfConfig":"56"},{"size":1268,"mtime":1611773954934,"results":"65","hashOfConfig":"56"},{"size":3483,"mtime":1622654856546,"results":"66","hashOfConfig":"56"},{"size":807,"mtime":1621950232391,"results":"67","hashOfConfig":"56"},{"size":1889,"mtime":1611770861386,"results":"68","hashOfConfig":"56"},{"size":1337,"mtime":1620629806966,"results":"69","hashOfConfig":"56"},{"size":3133,"mtime":1621841344224,"results":"70","hashOfConfig":"56"},{"size":4719,"mtime":1622656106350,"results":"71","hashOfConfig":"56"},{"size":497,"mtime":1621841246745,"results":"72","hashOfConfig":"56"},{"size":3053,"mtime":1621088470932,"results":"73","hashOfConfig":"56"},{"size":594,"mtime":1611850123852,"results":"74","hashOfConfig":"56"},{"size":1184,"mtime":1611690770514,"results":"75","hashOfConfig":"56"},{"size":560,"mtime":1620570446052,"results":"76","hashOfConfig":"56"},{"size":92,"mtime":1611853264648,"results":"77","hashOfConfig":"56"},{"size":1537,"mtime":1611857097312,"results":"78","hashOfConfig":"56"},{"size":1740,"mtime":1620633572780,"results":"79","hashOfConfig":"56"},{"size":3627,"mtime":1621088337236,"results":"80","hashOfConfig":"56"},{"size":905,"mtime":1611937248400,"results":"81","hashOfConfig":"56"},{"size":591,"mtime":1611849848953,"results":"82","hashOfConfig":"56"},{"size":768,"mtime":1613408769484,"results":"83","hashOfConfig":"56"},{"size":362,"mtime":1610712655538,"results":"84","hashOfConfig":"56"},{"size":795,"mtime":1611926881625,"results":"85","hashOfConfig":"56"},{"size":1658,"mtime":1621841259630,"results":"86","hashOfConfig":"56"},{"size":1131,"mtime":1621088658156,"results":"87","hashOfConfig":"56"},{"size":1109,"mtime":1621088763192,"results":"88","hashOfConfig":"56"},{"size":1558,"mtime":1611935672370,"results":"89","hashOfConfig":"56"},{"size":434,"mtime":1611937957410,"results":"90","hashOfConfig":"56"},{"size":3525,"mtime":1622656033586,"results":"91","hashOfConfig":"56"},{"size":1376,"mtime":1621948290376,"results":"92","hashOfConfig":"56"},{"size":139,"mtime":1612018929712,"results":"93","hashOfConfig":"56"},{"size":3355,"mtime":1622742452713,"results":"94","hashOfConfig":"56"},{"size":8534,"mtime":1622742484594,"results":"95","hashOfConfig":"56"},{"size":7498,"mtime":1622745254202,"results":"96","hashOfConfig":"56"},{"size":2702,"mtime":1622738255089,"results":"97","hashOfConfig":"56"},{"size":202,"mtime":1620494637319,"results":"98","hashOfConfig":"56"},{"size":3447,"mtime":1621097331320,"results":"99","hashOfConfig":"56"},{"size":783,"mtime":1620507717017,"results":"100","hashOfConfig":"56"},{"size":694,"mtime":1614270082739,"results":"101","hashOfConfig":"56"},{"size":1471,"mtime":1620664903829,"results":"102","hashOfConfig":"56"},{"size":1560,"mtime":1620665017113,"results":"103","hashOfConfig":"56"},{"size":91,"mtime":1613059736385,"results":"104","hashOfConfig":"56"},{"size":6963,"mtime":1621948705460,"results":"105","hashOfConfig":"56"},{"size":92,"mtime":1613066545866,"results":"106","hashOfConfig":"56"},{"size":4415,"mtime":1620665343202,"results":"107","hashOfConfig":"56"},{"size":7652,"mtime":1621103020402,"results":"108","hashOfConfig":"56"},{"size":6489,"mtime":1622742598400,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"j1c4be",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"132"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"118"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"115"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"115"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"115"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"118"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"112"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"132"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\index.js",[],["237","238"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\jumbotron.js",[],["239","240"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\jumbotron\\jumbotron.styles.js",[],["241","242"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\footer\\footer.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\footer.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\footer\\footer.styles.js",[],["243","244"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\faqs.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\accordion\\accordion.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\opt-form\\optform.component.js",[],["245","246"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\opt-form\\optform.styles.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\App.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\global_styles.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\accordion\\accordion.styles.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\home.js",["247"],"import React from 'react'\r\nimport { Link, Route } from 'react-router-dom'\r\nimport Feature from '../components/feature/feature.component'\r\nimport OptForm from '../components/opt-form/optform.component'\r\nimport FaqsContainer from '../containers/faqs'\r\nimport { FooterContainer } from '../containers/footer'\r\nimport HeaderContainer from '../containers/header'\r\nimport JumbotronContainer from '../containers/jumbotron'\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <div>\r\n            <HeaderContainer>\r\n                <Feature>\r\n                    <Feature.Title>Unlimited films, Tv programms and more</Feature.Title>\r\n                    <Feature.SubTitle>Watch More and Cancel at any time</Feature.SubTitle>\r\n                    <OptForm>\r\n                        <OptForm.Input placeholder=\"Email address\" />\r\n                        <Link to=\"/Signin\" ><OptForm.Button>Try it now</OptForm.Button></Link>\r\n                        <OptForm.Break />\r\n                        <br />\r\n                        <OptForm.Text>Ready to watch? Enter your email to create or restart your membership.</OptForm.Text>\r\n                    </OptForm>\r\n                </Feature>\r\n\r\n            </HeaderContainer>\r\n            <JumbotronContainer />\r\n            <FaqsContainer />\r\n            <FooterContainer />\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\signin.js",["248","249","250","251"],"import React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Form from '../components/form/form.component';\r\nimport { FooterContainer } from '../containers/footer'\r\nimport HeaderContainer from '../containers/header'\r\nimport { FirebaseContext } from '../context/firebase';\r\nimport { ProfileContext } from '../context/profile.context';\r\nimport './loader.styles.css';\r\n\r\nconst Signin = () => {\r\n    const history = useHistory();\r\n    const { firebase } = useContext(FirebaseContext);\r\n    const { showProfile, setShowProfile, loading, setLoading } = useContext(ProfileContext);\r\n    const [email, setEmail] = useState('h@gmail.com');\r\n    const [password, setPassword] = useState('123456');\r\n    const [error, setError] = useState('');\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const isInvalid = password == '' || email == '';\r\n    const handleSignin = (event) => {\r\n\r\n        setLoader(true);\r\n        event.preventDefault();\r\n\r\n\r\n        return firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                setShowProfile(true);\r\n                setLoading(true);\r\n                setLoader(false);\r\n                history.push('/browse');\r\n            })\r\n            .catch((error) => {\r\n                setEmail('');\r\n                setPassword('');\r\n                setError(error.message);\r\n                setLoader(false);\r\n            });\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <HeaderContainer>\r\n                <Form>\r\n                    <Form.Title>Sign In</Form.Title>\r\n                    {error && <Form.Error>{error}</Form.Error>}\r\n                    <Form.Base onSubmit={handleSignin} method=\"post\">\r\n                        <Form.Input\r\n                            placeholder=\"Email Address\"\r\n                            value={email}\r\n                            type=\"email\"\r\n                            onChange={({ target }) => setEmail(target.value)}\r\n                        />\r\n                        <Form.Input\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            type=\"password\"\r\n                            onChange={({ target }) => setPassword(target.value)}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <Form.Submit style={{ position: \"relative\" }} className={loader ? \"loading\" : \"\"} disabled={isInvalid} type=\"submit\">Sign In\r\n                        {(loader) ? <div id=\"loading\"></div> : null}\r\n                        </Form.Submit>\r\n\r\n\r\n                    </Form.Base>\r\n\r\n                    <Form.Text>\r\n                        New to Movieflics? <Form.Link to=\"/signup\">Sign up now.</Form.Link>\r\n                    </Form.Text>\r\n                    <Form.TextSmall>\r\n                        This page is protected by Google reCAPTCHA to ensure you're not a bot. Learn more.\r\n          </Form.TextSmall>\r\n                </Form>\r\n            </HeaderContainer>\r\n            <FooterContainer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signin\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Header\\Header.styles.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\header.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Header\\Header.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\feature\\feature.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\jumbotron\\jumbotron.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\lib\\firebase.prod.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\context\\firebase.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\form\\form.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\form\\form.styles.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\signup.js",["252","253","254"],"import React, { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Form from '../components/form/form.component';\r\nimport { FooterContainer } from '../containers/footer'\r\nimport HeaderContainer from '../containers/header'\r\nimport { FirebaseContext } from '../context/firebase';\r\nimport './loader.styles.css';\r\n\r\nconst Signup = () => {\r\n\r\n    const history = useHistory();\r\n    const { firebase } = useContext(FirebaseContext);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [firstname, setFirstName] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loader, setLoader] = useState(false);\r\n\r\n    const isInvalid = firstname == '' || email == '' || password == '';\r\n    const handleSignup = (event) => {\r\n        setLoader(true);\r\n        event.preventDefault();\r\n\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then((result) => {\r\n                result.user\r\n                    .updateProfile({\r\n                        displayName: firstname,\r\n                        photoURL: Math.floor(Math.random() * 8) + 1\r\n                    })\r\n                    .then(() => {\r\n                        history.push('/signin')\r\n                    })\r\n                setLoader(false);\r\n\r\n            })\r\n            .catch((error) => {\r\n                setEmail('');\r\n                setPassword('');\r\n                setFirstName('');\r\n                setError(error.message);\r\n                setLoader(false);\r\n            });\r\n\r\n    }\r\n    return (\r\n\r\n        <>\r\n            <HeaderContainer>\r\n                <Form>\r\n                    <Form.Title>Sign up</Form.Title>\r\n                    {error && <Form.Error>{error}</Form.Error>}\r\n                    <Form.Base onSubmit={handleSignup} method=\"post\">\r\n                        <Form.Input\r\n                            placeholder=\"First Name\"\r\n                            value={firstname}\r\n                            type=\"text\"\r\n                            onChange={({ target }) => setFirstName(target.value)}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <Form.Input\r\n                            placeholder=\"Email Address\"\r\n                            value={email}\r\n                            type=\"email\"\r\n                            onChange={({ target }) => setEmail(target.value)}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <Form.Input\r\n                            placeholder=\"Password\"\r\n                            value={password}\r\n                            type=\"password\"\r\n                            onChange={({ target }) => setPassword(target.value)}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <Form.Submit style={{ position: \"relative\" }} className={loader ? \"loading\" : \"\"} disabled={isInvalid} type=\"submit\">Sign up\r\n                        {(loader) ? <div id=\"loading\"></div> : null}</Form.Submit>\r\n\r\n                    </Form.Base>\r\n\r\n                    <Form.Text>\r\n                        already a member? <Form.Link to=\"/signin\">Sign In.</Form.Link>\r\n                    </Form.Text>\r\n                    <Form.TextSmall>\r\n                        This page is protected by Google reCAPTCHA to ensure you're not a bot. Learn more.\r\n          </Form.TextSmall>\r\n                </Form>\r\n            </HeaderContainer>\r\n            <FooterContainer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\helpers\\routes.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\feature\\feature.styles.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\hooks\\use-auth-listener.js",["255"],"import { useContext, useEffect, useState } from 'react'\r\nimport { FirebaseContext } from '../context/firebase';\r\n\r\nexport const UseAuthListener = () => {\r\n\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\r\n\r\n    const { firebase } = useContext(FirebaseContext);\r\n\r\n    useEffect(() => {\r\n        const listener = firebase.auth().onAuthStateChanged((authUser) => {\r\n            if (authUser) {\r\n                localStorage.setItem('authUser', JSON.stringify(authUser));\r\n                setUser(authUser);\r\n            }\r\n            else {\r\n                localStorage.removeItem('authUser');\r\n                setUser(null);\r\n            }\r\n        });\r\n        return () => listener();\r\n    }, []);\r\n\r\n    return { user };\r\n\r\n}\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\reportWebVitals.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\hooks\\use-content.js",["256","257"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { FirebaseContext } from '../context/firebase';\r\n\r\nexport const UseContent = (target) => {\r\n\r\n    const [content, setContent] = useState();\r\n    const { firebase } = useContext(FirebaseContext);\r\n\r\n    useEffect(() => {\r\n        firebase.firestore()\r\n            .collection(target)\r\n            .get()\r\n            .then((snapshot) => {\r\n                const allcontent = snapshot.docs.map((contenObj) => ({\r\n                    ...contenObj.data(),\r\n                    docId: contenObj.id,\r\n                }));\r\n                setContent(allcontent);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }, []);\r\n    return {\r\n        [target]: content\r\n    }\r\n}\r\n",["258","259"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\profile.js",["260","261"],"import React, { useContext } from 'react'\r\nimport Header from '../components/Header/Header.component'\r\nimport Profiles from '../components/profiles/profiles.component';\r\nimport { ProfileContext } from '../context/profile.context';\r\nimport logo from '../movieflics.svg';\r\n\r\nconst ProfileContainer = ({ user, setProfile }) => {\r\n\r\n    const { showProfile, setShowProfile } = useContext(ProfileContext);\r\n    // console.log(\"showProfile\", showProfile);\r\n    const newStyle = {\r\n        zIndex: \"1000\",\r\n        backgroundColor: \"black\"\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Header bg={false}>\r\n                <Header.Frame style={{\r\n                    zIndex: \"1000\",\r\n                    backgroundColor: \"black\",\r\n                    position: \"relative\",\r\n                    margin: \"0\",\r\n                    padding: \"20px\"\r\n                }}>\r\n                    <Header.Logo to=\"/\" alt=\"Movieflics\" src={logo} />\r\n                </Header.Frame>\r\n            </Header>\r\n\r\n            <Profiles >\r\n                <Profiles.Title>Who's Watching</Profiles.Title>\r\n                <Profiles.List>\r\n                    <Profiles.User>\r\n                        <Profiles.Picture onClick={() => {\r\n                            setProfile({ displayName: user.displayName, photoURL: user.photoURL });\r\n                            setShowProfile(false);\r\n                        }} src={user.photoURL} />\r\n                        <Profiles.Name>{user.displayName}</Profiles.Name>\r\n                    </Profiles.User>\r\n                </Profiles.List>\r\n            </Profiles>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProfileContainer\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\profiles\\profiles.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\profiles\\profiles.styles.js",[],["262","263"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\loading\\loading.styles.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\loading\\loading.component.js",[],["264","265"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Row\\Row.component.js",["266","267","268"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\request.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\axios.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\banner\\banner.component.js",["269","270"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\Row.container.js",["271","272","273","274","275","276"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport Banner from '../components/banner/banner.component'\r\nimport Loading from '../components/loading/loading.component';\r\nimport Modal from '../components/modal/modal.component';\r\nimport ModalDetails from '../components/modal/modalDetails.component';\r\nimport Row from '../components/Row/Row.component'\r\nimport { ApiContext } from '../context/api.context';\r\nimport { FirebaseContext } from '../context/firebase';\r\nimport { ProfileContext } from '../context/profile.context';\r\nimport ProfileContainer from './profile';\r\n\r\n\r\n\r\n\r\n\r\nconst RowContainer = () => {\r\n\r\n    const { showProfile, setShowProfile, loading, setLoading } = useContext(ProfileContext);\r\n    const { firebase } = useContext(FirebaseContext);\r\n    const user = firebase.auth().currentUser || {};\r\n\r\n    const [profile, setProfile] = useState({});\r\n    // const [loading, setloading] = useState(true);\r\n    const [backdrop, setBackdrop] = useState(false);\r\n    const [play, setplay] = useState(false);\r\n    const [movie, setMovie] = useState('');\r\n    const [listItems, setListItems] = useState([]);\r\n    const [addStatus, setAddStatus] = useState(false);\r\n\r\n    const context = useContext(ApiContext);\r\n    // console.log(\"context\", context);\r\n\r\n    useEffect(() => {\r\n        if (!showProfile) {\r\n\r\n            setTimeout(() => {\r\n                setLoading(false);\r\n            }, 3000)\r\n        }\r\n    }, [showProfile]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        async function getListData() {\r\n            const db = firebase.firestore();\r\n            try {\r\n                const res = await db.collection('movies').doc(user.uid).get();\r\n                let datas = res.data().id;\r\n                let data = [];\r\n                for (const item in datas) {\r\n                    data.push(datas[item]);\r\n                }\r\n\r\n                setListItems(data);\r\n            }\r\n            catch (e) {\r\n                console.log(e.message)\r\n            }\r\n        }\r\n        getListData();\r\n        // console.log(listItems);\r\n    }, [user]);\r\n\r\n\r\n\r\n    // console.log(listItems)\r\n\r\n    async function checkForStatus(movie) {\r\n        let i = 0;\r\n        for (i = 0; i < listItems.length; i++) {\r\n            if (movie.id === listItems[i].id) {\r\n                console.log(\"this is already added to list firend\");\r\n                setAddStatus(true);\r\n                console.log(\"addstatus\", addStatus);\r\n                break;\r\n            }\r\n            else {\r\n                setAddStatus(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    async function BackdropHandler(movie) {\r\n        await checkForStatus(movie);\r\n\r\n        setMovie(movie);\r\n        // console.log(\"backdrop clicked\");\r\n        // console.log(backdrop, movie);\r\n        setBackdrop(true);\r\n    }\r\n\r\n    function playHandler(movie) {\r\n        setplay(true);\r\n        BackdropHandler(movie);\r\n    }\r\n\r\n    function onCloseHandler() {\r\n        setBackdrop(false);\r\n        setplay(false);\r\n    }\r\n\r\n    const onAddToList = async (movie) => {\r\n        const db = firebase.firestore();\r\n        try {\r\n\r\n            if (addStatus) {\r\n                const res = await db.collection('movies').doc(user.uid).update({\r\n                    id: firebase.firestore.FieldValue.arrayRemove(movie)\r\n                });\r\n\r\n\r\n                let data = [];\r\n                data = listItems;\r\n                data = data.filter(film => film.id !== movie.id);\r\n                setListItems(data);\r\n\r\n                // console.log(res);\r\n                // console.log(\"remove item\");\r\n            }\r\n            else {\r\n\r\n                const res = await db.collection('movies').doc(user.uid).update({\r\n                    id: firebase.firestore.FieldValue.arrayUnion(movie)\r\n                });\r\n\r\n                let data = [];\r\n                data = listItems;\r\n                data = data.filter(film => film.id !== movie.id);\r\n                data.push(movie);\r\n                setListItems(data);\r\n                // console.log(res);\r\n                // console.log(\"add item\")\r\n            }\r\n\r\n\r\n        }\r\n        catch (e) {\r\n            // console.log(e.message)\r\n            if (e.message.includes(\"No document to update\")) {\r\n                const res = await db.collection('movies').doc(user.uid).set({\r\n                    id: firebase.firestore.FieldValue.arrayUnion(movie)\r\n                });\r\n                // console.log(res);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // console.log(\"loading\", loading);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !showProfile ?\r\n                    (<>\r\n                        {\r\n                            loading ?\r\n                                (<Loading src={user.photoURL} />) : <Loading.ReleaseBody />\r\n                        }\r\n\r\n                        <Banner BackdropHandler={playHandler} Movies={context[0]} />\r\n\r\n                        {\r\n                            backdrop &&\r\n                            (\r\n\r\n                                <Modal\r\n                                    show={backdrop}\r\n                                    close={onCloseHandler}\r\n                                    movie={movie}\r\n\r\n                                >\r\n                                    <ModalDetails movie={movie} playNow={play} addToList={onAddToList} added={addStatus} setAdded={setAddStatus} />\r\n                                </Modal>\r\n                            )\r\n                        }\r\n\r\n\r\n\r\n                        <Row title={'Trending Now'}\r\n                            // fetchUrl={requests.fetchTrending}\r\n                            isLargeRow\r\n                            BackdropHandler={BackdropHandler}\r\n                            playHandler={playHandler}\r\n                            Movies={context[0]}\r\n                        />\r\n                        {/* <Row\r\n                            title={'Anime'}\r\n                            // fetchUrl={requests.fetchAnime}\r\n                            BackdropHandler={BackdropHandler}\r\n                            playHandler={playHandler}\r\n                            Movies={context[1]}\r\n                        /> */}\r\n                        <Row\r\n                            title={'Top Rated'}\r\n                            // fetchUrl={requests.fetchTopRated}\r\n                            BackdropHandler={BackdropHandler}\r\n                            playHandler={playHandler}\r\n                            Movies={context[2]}\r\n                        />\r\n                        {/* <Row\r\n                            title={'Netflix Originals'}\r\n                            // fetchUrl={requests.fetchNetflixOriginals}\r\n                            BackdropHandler={BackdropHandler}\r\n                            playHandler={playHandler}\r\n                            Movies={context[3]}\r\n                        /> */}\r\n                        <Row\r\n                            title={'Comedy Movies'}\r\n                            // fetchUrl={requests.fetchComedyMovies}\r\n                            BackdropHandler={BackdropHandler}\r\n                            playHandler={playHandler}\r\n                            Movies={context[4]}\r\n                        />\r\n                        <Row\r\n                            title={'Action Movies'}\r\n                            // fetchUrl={requests.fetchActionMovies}\r\n                            BackdropHandler={BackdropHandler}\r\n                            playHandler={playHandler}\r\n                            Movies={context[5]}\r\n                        />\r\n                        <Row\r\n                            title={'Horror Movies'}\r\n                            // fetchUrl={requests.fetchHorrorMovies}\r\n                            BackdropHandler={BackdropHandler}\r\n                            playHandler={playHandler}\r\n                            Movies={context[6]}\r\n                        />\r\n                        <Row\r\n                            title={'Romance Movies'}\r\n                            // fetchUrl={requests.fetchRomanceMovies}\r\n                            BackdropHandler={BackdropHandler}\r\n                            playHandler={playHandler}\r\n                            Movies={context[7]}\r\n                        />\r\n\r\n\r\n\r\n                       )\r\n                    </>\r\n                    )\r\n                    : (<ProfileContainer user={user} setProfile={setProfile} />)\r\n            }\r\n\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RowContainer\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Navbar\\navbar.component.js",["277","278","279","280","281","282"],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Navbar\\navbar.style.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\modal\\backdrop.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\modal\\modalDetails.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\modal\\modal.component.js",["283"],"import React from 'react';\r\nimport './modal.css'\r\nimport Backdrop from './backdrop';\r\n\r\nconst Modal = (props) => {\r\n    // console.log(props)\r\n    const url = 'https://image.tmdb.org/t/p/original' + `${props.movie.backdrop_path ? props.movie.backdrop_path : props.movie.poster_path}`;\r\n    const backgroundStyle = {\r\n        backgroundImage: `url(${url})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: \"center\",\r\n    }\r\n    return (\r\n        <>\r\n            <Backdrop show={props.show} toggleBackdrop={props.close} />\r\n            <div\r\n                style={backgroundStyle}\r\n                className={(props.show ? \"modal show\" : \"modal hide\")}\r\n            >\r\n                {props.children}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Modal;","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Button_Group\\ButtonGroup.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Carousel\\Carousel.item.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\components\\Search\\search.component.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\context\\search.context.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\search\\Search.js",["284","285","286","287","288","289","290"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport SearchComponent from '../../components/Search/search.component';\r\nimport { SearchContext } from '../../context/search.context';\r\n// import axios from '../../axios';\r\nimport axios from 'axios';\r\nimport './search.scss'\r\nimport Modal from '../../components/modal/modal.component';\r\nimport ModalDetails from '../../components/modal/modalDetails.component';\r\nimport { FirebaseContext } from '../../context/firebase';\r\n\r\n\r\nconst Search = () => {\r\n\r\n    const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\n    const baseImgUrl = 'https://image.tmdb.org/t/p/original/';\r\n    const { searchQuery, setSearchQuery } = useContext(SearchContext);\r\n\r\n    const { firebase } = useContext(FirebaseContext);\r\n    const user = firebase.auth().currentUser || {};\r\n\r\n    const [searchItems, setSearchItems] = useState([]);\r\n\r\n\r\n\r\n    const [backdrop, setBackdrop] = useState(false);\r\n    const [play, setplay] = useState(false);\r\n    const [movie, setMovie] = useState('');\r\n\r\n\r\n    const [listItems, setListItems] = useState([]);\r\n    const [addStatus, setAddStatus] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        async function getListData() {\r\n            const db = firebase.firestore();\r\n            try {\r\n                const res = await db.collection('movies').doc(user.uid).get();\r\n                let datas = res.data().id;\r\n                let data = [];\r\n                for (const item in datas) {\r\n                    data.push(datas[item]);\r\n                }\r\n\r\n                setListItems(data);\r\n            }\r\n            catch (e) {\r\n                console.log(e.message)\r\n            }\r\n        }\r\n        getListData();\r\n\r\n    }, [user]);\r\n\r\n\r\n    async function checkForStatus(movie) {\r\n        let i = 0;\r\n        for (i = 0; i < listItems.length; i++) {\r\n            if (movie.id === listItems[i].id) {\r\n\r\n                setAddStatus(true);\r\n\r\n                break;\r\n            }\r\n            else {\r\n                setAddStatus(false);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    async function BackdropHandler(movie) {\r\n\r\n        await checkForStatus(movie);\r\n        setMovie(movie);\r\n\r\n        setBackdrop(true);\r\n    }\r\n\r\n    function playHandler(movie) {\r\n        setplay(true);\r\n        BackdropHandler(movie);\r\n    }\r\n\r\n    function onCloseHandler() {\r\n        setBackdrop(false);\r\n        setplay(false);\r\n    }\r\n\r\n\r\n    const onAddToList = async (movie) => {\r\n        const db = firebase.firestore();\r\n        try {\r\n\r\n            if (addStatus) {\r\n                const res = await db.collection('movies').doc(user.uid).update({\r\n                    id: firebase.firestore.FieldValue.arrayRemove(movie)\r\n                });\r\n\r\n\r\n                let data = [];\r\n                data = listItems;\r\n                data = data.filter(film => film.id !== movie.id);\r\n                setListItems(data);\r\n\r\n\r\n            }\r\n            else {\r\n                const res = await db.collection('movies').doc(user.uid).update({\r\n                    id: firebase.firestore.FieldValue.arrayUnion(movie)\r\n                });\r\n\r\n                let data = [];\r\n                data = listItems;\r\n                data = data.filter(film => film.id !== movie.id);\r\n                data.push(movie);\r\n                setListItems(data);\r\n\r\n                // console.log(\"add item\")\r\n            }\r\n\r\n\r\n        }\r\n        catch (e) {\r\n            console.log(e.message)\r\n            if (e.message.includes(\"No document to update\")) {\r\n                const res = await db.collection('movies').doc(user.uid).set({\r\n                    id: firebase.firestore.FieldValue.arrayUnion(movie)\r\n                });\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        let cancelToken;\r\n        async function changeQuery() {\r\n\r\n            let value = searchQuery.split(\" \").join(\"%20\");\r\n\r\n            if (typeof cancelToken != typeof undefined) {\r\n                cancelToken.cancel(\"Canceling the prev req\");\r\n            }\r\n\r\n            cancelToken = axios.CancelToken.source();\r\n\r\n            const url = `https://api.themoviedb.org/3/search/multi?api_key=${API_KEY}&language=en-US&query=${value}&page=1&include_adult=false`;\r\n            const request = await axios.get(url, { cancelToken: cancelToken.token });\r\n            setSearchItems(request.data.results);\r\n            // console.table('searchResult', request);\r\n            return request;\r\n        }\r\n\r\n        changeQuery();\r\n\r\n    }, [searchQuery])\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                backdrop &&\r\n                (\r\n\r\n                    <Modal\r\n                        show={backdrop}\r\n                        close={onCloseHandler}\r\n                        movie={movie}\r\n                    >\r\n                        <ModalDetails movie={movie} playNow={play} addToList={onAddToList} added={addStatus} setAdded={setAddStatus} />\r\n                    </Modal>\r\n                )\r\n            }\r\n\r\n\r\n\r\n            <div className=\"search-page\">\r\n                <h1></h1>\r\n                <h1 className=\"search-page__title\">Search Results</h1>\r\n                <div className=\"search-page__outer\">\r\n                    {\r\n                        searchItems?.length === 0 ?\r\n                            <div style={{ color: \"white\", marginLeft: \"0%\", lineHeight: \"3\" }}>\r\n                                <h2>No Search Result available</h2>\r\n                                <ul>\r\n                                    <li><h4>Try different keyword</h4></li>\r\n                                    <li><h4>keyword may have some spelling error</h4></li>\r\n                                    <li><h4>Internet may be slow</h4></li>\r\n                                </ul>\r\n                            </div>\r\n                            :\r\n                            (\r\n                                <div className=\"search-page__inner\">\r\n                                    {\r\n\r\n\r\n                                        searchItems.map(item =>\r\n                                            item.poster_path\r\n                                                ?\r\n                                                <SearchComponent\r\n                                                    key={item.id}\r\n                                                    item={item}\r\n                                                    image={baseImgUrl + item.poster_path}\r\n                                                    handleItemExpand={BackdropHandler}\r\n                                                    HandlePlay={playHandler}\r\n                                                    title={item.title} /> : null\r\n                                        )\r\n\r\n\r\n\r\n                                    }\r\n                                </div>\r\n                            )\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\context\\profile.context.js",[],"C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\pages\\MyList\\list.js",["291","292","293"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport SearchComponent from '../../components/Search/search.component';\r\nimport './list.scss'\r\nimport Modal from '../../components/modal/modal.component';\r\nimport ModalDetails from '../../components/modal/modalDetails.component';\r\nimport { FirebaseContext } from '../../context/firebase';\r\n\r\n\r\n\r\n\r\nconst List = () => {\r\n\r\n    const { firebase } = useContext(FirebaseContext);\r\n    const user = firebase.auth().currentUser || {};\r\n    const baseImgUrl = 'https://image.tmdb.org/t/p/original/';\r\n\r\n\r\n    const [listItems, setListItems] = useState([]);\r\n\r\n\r\n    const [backdrop, setBackdrop] = useState(false);\r\n    const [play, setplay] = useState(false);\r\n    const [movie, setMovie] = useState('');\r\n\r\n\r\n    function BackdropHandler(movie) {\r\n        setMovie(movie);\r\n\r\n        setBackdrop(true);\r\n    }\r\n\r\n    function playHandler(movie) {\r\n        setplay(true);\r\n        BackdropHandler(movie);\r\n    }\r\n\r\n    function onCloseHandler() {\r\n        setBackdrop(false);\r\n        setplay(false);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        async function getList() {\r\n            const db = firebase.firestore();\r\n            try {\r\n                const res = await db.collection('movies').doc(user.uid).get();\r\n                let datas = res.data().id;\r\n                let data = [];\r\n                for (const item in datas) {\r\n                    data.push(datas[item]);\r\n                }\r\n\r\n                setListItems(data);\r\n            }\r\n            catch (e) {\r\n                console.log(e.message)\r\n            }\r\n        }\r\n\r\n        getList();\r\n\r\n    }, [user])\r\n\r\n\r\n\r\n\r\n    const onRemoveFromList = async (movie) => {\r\n        const db = firebase.firestore();\r\n        try {\r\n\r\n\r\n            const res = await db.collection('movies').doc(user.uid).update({\r\n                id: firebase.firestore.FieldValue.arrayRemove(movie)\r\n            });\r\n\r\n            let data = [];\r\n            data = listItems;\r\n            data = data.filter(film => film.id !== movie.id);\r\n            setListItems(data);\r\n            // console.log(\"data\", data);\r\n            // console.log(res);\r\n            // console.log(\"remove item\");\r\n            onCloseHandler()\r\n        }\r\n        catch (e) {\r\n            console.log(e.message)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                backdrop &&\r\n                (\r\n\r\n                    <Modal\r\n                        show={backdrop}\r\n                        close={onCloseHandler}\r\n                        movie={movie}\r\n                    >\r\n                        <ModalDetails movie={movie} playNow={play} addToList={onRemoveFromList} added={true} />\r\n                    </Modal>\r\n                )\r\n            }\r\n\r\n\r\n\r\n            <div className=\"search-page\">\r\n                <h1></h1>\r\n                <h1 className=\"search-page__title\">My List</h1>\r\n                <div className=\"search-page__outer\">\r\n                    {\r\n                        listItems?.length === 0 ?\r\n                            <div style={{ color: \"white\", marginLeft: \"0%\", lineHeight: \"3\" }}>\r\n                                <h2>Currently No Item in the List</h2>\r\n                            </div>\r\n                            :\r\n                            (\r\n                                <div className=\"search-page__inner\">\r\n                                    {\r\n\r\n\r\n                                        listItems.map(item =>\r\n                                            item.poster_path\r\n                                                ?\r\n                                                <SearchComponent\r\n                                                    key={item.id}\r\n                                                    item={item}\r\n                                                    image={baseImgUrl + item.poster_path}\r\n                                                    handleItemExpand={BackdropHandler}\r\n                                                    HandlePlay={playHandler}\r\n                                                    title={item.title} /> : null\r\n                                        )\r\n\r\n\r\n\r\n                                    }\r\n                                </div>\r\n                            )\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\context\\api.context.js",["294"],"import { createContext, useEffect, useState } from \"react\";\r\nimport axios from '../axios';\r\nimport requests from '../request';\r\nexport const ApiContext = createContext();\r\n\r\n\r\nconst Context = (props) => {\r\n\r\n    const [TrendingMovies, setTrendingMovies] = useState([]);\r\n    const [anime, setAnime] = useState([]);\r\n    const [topRated, setTopRated] = useState([]);\r\n    const [netflixOriginal, setNetflixOriginals] = useState([]);\r\n    const [comedyMovies, setComedyMovies] = useState([]);\r\n    const [actionMovies, setActionMovies] = useState([]);\r\n    const [horrorMovies, setHorrorMovies] = useState([]);\r\n    const [romanticMovies, setRomanticMovies] = useState([]);\r\n    const [popularTv, setPopularTv] = useState([]);\r\n    const [actionTv, setActionTv] = useState([]);\r\n    const [animated, setAnimated] = useState([]);\r\n    const [soap, setSoap] = useState([]);\r\n\r\n    let movies = [];\r\n\r\n    const baseImgUrl = 'https://image.tmdb.org/t/p/original/';\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData(fetchUrl) {\r\n            // console.log(\"context api is called\")\r\n            const request = await axios.get(fetchUrl);\r\n            let data = [];\r\n            // console.log('movies', request.data.results);\r\n            data = request.data.results;\r\n\r\n            setTrendingMovies(data);\r\n            return request;\r\n        }\r\n        fetchData(requests.fetchTrending);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        async function fetchData(fetchUrl) {\r\n            // console.log(\"context api is called\")\r\n            const request = await axios.get(fetchUrl);\r\n            let data = [];\r\n            // console.log('movies', request.data.results);\r\n            data = request.data.results;\r\n\r\n            setAnime(data);\r\n            return request;\r\n        }\r\n        fetchData(requests.fetchAnime);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        async function fetchData(fetchUrl) {\r\n            // console.log(\"context api is called\")\r\n            const request = await axios.get(fetchUrl);\r\n            let data = [];\r\n            // console.log('movies', request.data.results);\r\n            data = request.data.results;\r\n\r\n            setActionMovies(data);\r\n            return request;\r\n        }\r\n        fetchData(requests.fetchActionMovies);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        async function fetchData(fetchUrl) {\r\n            // console.log(\"context api is called\")\r\n            const request = await axios.get(fetchUrl);\r\n            let data = [];\r\n            // console.log('movies', request.data.results);\r\n            data = request.data.results;\r\n\r\n            setComedyMovies(data);\r\n            return request;\r\n        }\r\n        fetchData(requests.fetchComedyMovies);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        async function fetchData(fetchUrl) {\r\n            // console.log(\"context api is called\")\r\n            const request = await axios.get(fetchUrl);\r\n            let data = [];\r\n            // console.log('movies', request.data.results);\r\n            data = request.data.results;\r\n\r\n            setNetflixOriginals(data);\r\n            return request;\r\n        }\r\n        fetchData(requests.fetchNetflixOriginals);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        async function fetchData(fetchUrl) {\r\n            // console.log(\"context api is called\")\r\n            const request = await axios.get(fetchUrl);\r\n            let data = [];\r\n            // console.log('movies', request.data.results);\r\n            data = request.data.results;\r\n\r\n            setTopRated(data);\r\n            return request;\r\n        }\r\n        fetchData(requests.fetchTopRated);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        async function fetchData(fetchUrl) {\r\n            // console.log(\"context api is called\")\r\n            const request = await axios.get(fetchUrl);\r\n            let data = [];\r\n            // console.log('movies', request.data.results);\r\n            data = request.data.results;\r\n\r\n            setHorrorMovies(data);\r\n            return request;\r\n        }\r\n        fetchData(requests.fetchHorrorMovies);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        async function fetchData(fetchUrl) {\r\n            // console.log(\"context api is called\")\r\n            const request = await axios.get(fetchUrl);\r\n            let data = [];\r\n            // console.log('movies', request.data.results);\r\n            data = request.data.results;\r\n\r\n            setRomanticMovies(data);\r\n            return request;\r\n        }\r\n        fetchData(requests.fetchRomanceMovies);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        async function fetchData(fetchUrl) {\r\n            // console.log(\"context api is called\")\r\n            const request = await axios.get(fetchUrl);\r\n            let data = [];\r\n            // console.log('movies', request.data.results);\r\n            data = request.data.results;\r\n\r\n            setPopularTv(data);\r\n            return request;\r\n        }\r\n        fetchData(requests.fetchPopularTv);\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData(fetchUrl) {\r\n            // console.log(\"context api is called\")\r\n            const request = await axios.get(fetchUrl);\r\n            let data = [];\r\n            // console.log('movies', request.data.results);\r\n            data = request.data.results;\r\n\r\n            setActionTv(data);\r\n            return request;\r\n        }\r\n        fetchData(requests.fetchActionTv);\r\n    }, [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData(fetchUrl) {\r\n            // console.log(\"context api is called\")\r\n            const request = await axios.get(fetchUrl);\r\n            let data = [];\r\n            // console.log('movies', request.data.results);\r\n            data = request.data.results;\r\n\r\n            setAnimated(data);\r\n            return request;\r\n        }\r\n        fetchData(requests.fetchAnimatedTv);\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData(fetchUrl) {\r\n            // console.log(\"context api is called\")\r\n            const request = await axios.get(fetchUrl);\r\n            let data = [];\r\n            // console.log('movies', request.data.results);\r\n            data = request.data.results;\r\n\r\n            setSoap(data);\r\n            return request;\r\n        }\r\n        fetchData(requests.fetchSoapTv);\r\n    }, [])\r\n\r\n\r\n    // useEffect(() => {\r\n    //     async function fetchData(fetchUrl) {\r\n    //         // console.log(\"context api is called\")\r\n    //         const request = await axios.get(fetchUrl);\r\n    //         let data = [];\r\n    //         // console.log('movies', request.data.results);\r\n    //         data = request.data.results;\r\n    //         let newData = movies;\r\n    //         newData.push(data);\r\n    //         setMovies(newData);\r\n    //         return request;\r\n    //     }\r\n    //     fetchData(requests.fetchTrending);\r\n    //     fetchData(requests.fetchAnime);\r\n    //     fetchData(requests.fetchTopRated);\r\n    //     fetchData(requests.fetchNetflixOriginals);\r\n    //     fetchData(requests.fetchComedyMovies);\r\n    //     fetchData(requests.fetchActionMovies);\r\n    //     fetchData(requests.fetchHorrorMovies);\r\n    //     fetchData(requests.fetchRomanceMovies);\r\n\r\n    // }, [])\r\n\r\n\r\n    movies.push(TrendingMovies,\r\n        anime,\r\n        topRated,\r\n        netflixOriginal,\r\n        comedyMovies,\r\n        actionMovies,\r\n        horrorMovies,\r\n        romanticMovies,\r\n        popularTv,\r\n        actionTv,\r\n        animated,\r\n        soap\r\n    );\r\n\r\n    return (\r\n        <ApiContext.Provider value={movies}>\r\n            {props.children}\r\n        </ApiContext.Provider>\r\n    )\r\n}\r\n\r\nexport default Context;","C:\\Users\\Himanshu\\Desktop\\netflix-clone\\src\\containers\\TvShows.container.js",["295","296","297","298"],{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"299","replacedBy":"303"},{"ruleId":"301","replacedBy":"304"},{"ruleId":"299","replacedBy":"305"},{"ruleId":"301","replacedBy":"306"},{"ruleId":"299","replacedBy":"307"},{"ruleId":"301","replacedBy":"308"},{"ruleId":"299","replacedBy":"309"},{"ruleId":"301","replacedBy":"310"},{"ruleId":"311","severity":1,"message":"312","line":2,"column":16,"nodeType":"313","messageId":"314","endLine":2,"endColumn":21},{"ruleId":"311","severity":1,"message":"315","line":13,"column":13,"nodeType":"313","messageId":"314","endLine":13,"endColumn":24},{"ruleId":"311","severity":1,"message":"316","line":13,"column":42,"nodeType":"313","messageId":"314","endLine":13,"endColumn":49},{"ruleId":"317","severity":1,"message":"318","line":19,"column":32,"nodeType":"319","messageId":"320","endLine":19,"endColumn":34},{"ruleId":"317","severity":1,"message":"318","line":19,"column":47,"nodeType":"319","messageId":"320","endLine":19,"endColumn":49},{"ruleId":"317","severity":1,"message":"318","line":20,"column":33,"nodeType":"319","messageId":"320","endLine":20,"endColumn":35},{"ruleId":"317","severity":1,"message":"318","line":20,"column":48,"nodeType":"319","messageId":"320","endLine":20,"endColumn":50},{"ruleId":"317","severity":1,"message":"318","line":20,"column":66,"nodeType":"319","messageId":"320","endLine":20,"endColumn":68},{"ruleId":"321","severity":1,"message":"322","line":22,"column":8,"nodeType":"323","endLine":22,"endColumn":10,"suggestions":"324"},{"ruleId":"311","severity":1,"message":"325","line":1,"column":8,"nodeType":"313","messageId":"314","endLine":1,"endColumn":13},{"ruleId":"321","severity":1,"message":"326","line":23,"column":8,"nodeType":"323","endLine":23,"endColumn":10,"suggestions":"327"},{"ruleId":"299","replacedBy":"328"},{"ruleId":"301","replacedBy":"329"},{"ruleId":"311","severity":1,"message":"315","line":9,"column":13,"nodeType":"313","messageId":"314","endLine":9,"endColumn":24},{"ruleId":"311","severity":1,"message":"330","line":11,"column":11,"nodeType":"313","messageId":"314","endLine":11,"endColumn":19},{"ruleId":"299","replacedBy":"331"},{"ruleId":"301","replacedBy":"332"},{"ruleId":"299","replacedBy":"333"},{"ruleId":"301","replacedBy":"334"},{"ruleId":"311","severity":1,"message":"335","line":1,"column":8,"nodeType":"313","messageId":"314","endLine":1,"endColumn":13},{"ruleId":"311","severity":1,"message":"336","line":47,"column":12,"nodeType":"313","messageId":"314","endLine":47,"endColumn":18},{"ruleId":"311","severity":1,"message":"337","line":47,"column":20,"nodeType":"313","messageId":"314","endLine":47,"endColumn":29},{"ruleId":"311","severity":1,"message":"338","line":9,"column":11,"nodeType":"313","messageId":"314","endLine":9,"endColumn":18},{"ruleId":"321","severity":1,"message":"339","line":48,"column":8,"nodeType":"323","endLine":48,"endColumn":10,"suggestions":"340"},{"ruleId":"311","severity":1,"message":"341","line":18,"column":26,"nodeType":"313","messageId":"314","endLine":18,"endColumn":40},{"ruleId":"311","severity":1,"message":"342","line":22,"column":12,"nodeType":"313","messageId":"314","endLine":22,"endColumn":19},{"ruleId":"321","severity":1,"message":"343","line":40,"column":8,"nodeType":"323","endLine":40,"endColumn":21,"suggestions":"344"},{"ruleId":"321","severity":1,"message":"322","line":63,"column":8,"nodeType":"323","endLine":63,"endColumn":14,"suggestions":"345"},{"ruleId":"311","severity":1,"message":"346","line":108,"column":23,"nodeType":"313","messageId":"314","endLine":108,"endColumn":26},{"ruleId":"311","severity":1,"message":"346","line":123,"column":23,"nodeType":"313","messageId":"314","endLine":123,"endColumn":26},{"ruleId":"347","severity":1,"message":"348","line":15,"column":17,"nodeType":"349","messageId":"320","endLine":15,"endColumn":20},{"ruleId":"311","severity":1,"message":"350","line":17,"column":13,"nodeType":"313","messageId":"314","endLine":17,"endColumn":24},{"ruleId":"311","severity":1,"message":"351","line":28,"column":21,"nodeType":"313","messageId":"314","endLine":28,"endColumn":31},{"ruleId":"311","severity":1,"message":"316","line":29,"column":12,"nodeType":"313","messageId":"314","endLine":29,"endColumn":19},{"ruleId":"321","severity":1,"message":"352","line":58,"column":8,"nodeType":"323","endLine":58,"endColumn":20,"suggestions":"353"},{"ruleId":"311","severity":1,"message":"354","line":78,"column":11,"nodeType":"313","messageId":"314","endLine":78,"endColumn":18},{"ruleId":"355","severity":1,"message":"356","line":7,"column":55,"nodeType":"319","messageId":"357","endLine":7,"endColumn":56},{"ruleId":"311","severity":1,"message":"358","line":16,"column":26,"nodeType":"313","messageId":"314","endLine":16,"endColumn":40},{"ruleId":"321","severity":1,"message":"322","line":54,"column":8,"nodeType":"323","endLine":54,"endColumn":14,"suggestions":"359"},{"ruleId":"311","severity":1,"message":"346","line":97,"column":23,"nodeType":"313","messageId":"314","endLine":97,"endColumn":26},{"ruleId":"311","severity":1,"message":"346","line":110,"column":23,"nodeType":"313","messageId":"314","endLine":110,"endColumn":26},{"ruleId":"311","severity":1,"message":"346","line":128,"column":23,"nodeType":"313","messageId":"314","endLine":128,"endColumn":26},{"ruleId":"321","severity":1,"message":"360","line":158,"column":8,"nodeType":"323","endLine":158,"endColumn":21,"suggestions":"361"},{"ruleId":"362","severity":1,"message":"363","line":179,"column":17,"nodeType":"364","endLine":179,"endColumn":21},{"ruleId":"321","severity":1,"message":"322","line":63,"column":8,"nodeType":"323","endLine":63,"endColumn":14,"suggestions":"365"},{"ruleId":"311","severity":1,"message":"346","line":73,"column":19,"nodeType":"313","messageId":"314","endLine":73,"endColumn":22},{"ruleId":"362","severity":1,"message":"363","line":111,"column":17,"nodeType":"364","endLine":111,"endColumn":21},{"ruleId":"311","severity":1,"message":"366","line":24,"column":11,"nodeType":"313","messageId":"314","endLine":24,"endColumn":21},{"ruleId":"321","severity":1,"message":"322","line":61,"column":8,"nodeType":"323","endLine":61,"endColumn":14,"suggestions":"367"},{"ruleId":"311","severity":1,"message":"346","line":106,"column":23,"nodeType":"313","messageId":"314","endLine":106,"endColumn":26},{"ruleId":"311","severity":1,"message":"346","line":121,"column":23,"nodeType":"313","messageId":"314","endLine":121,"endColumn":26},{"ruleId":"311","severity":1,"message":"346","line":139,"column":23,"nodeType":"313","messageId":"314","endLine":139,"endColumn":26},"no-native-reassign",["368"],"no-negated-in-lhs",["369"],["368"],["369"],["368"],["369"],["368"],["369"],["368"],["369"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'showProfile' is assigned a value but never used.","'loading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'firebase'. Either include it or remove the dependency array.","ArrayExpression",["370"],"'React' is defined but never used.","React Hook useEffect has missing dependencies: 'firebase' and 'target'. Either include them or remove the dependency array.",["371"],["368"],["369"],"'newStyle' is assigned a value but never used.",["368"],["369"],["368"],["369"],"'axios' is defined but never used.","'movies' is assigned a value but never used.","'setMovies' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Movies'. Either include it or remove the dependency array. If 'setMovie' needs the current value of 'Movies', you can also switch to useReducer instead of useState and read 'Movies' in the reducer.",["372"],"'setShowProfile' is assigned a value but never used.","'profile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setLoading'. Either include it or remove the dependency array.",["373"],["374"],"'res' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'searchQuery' is assigned a value but never used.","'setProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setSearchQuery'. Either include it or remove the dependency array.",["375"],"'navLink' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'setSearchQuery' is assigned a value but never used.",["376"],"React Hook useEffect has a missing dependency: 'API_KEY'. Either include it or remove the dependency array.",["377"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["378"],"'baseImgUrl' is assigned a value but never used.",["379"],"no-global-assign","no-unsafe-negation",{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"388","fix":"389"},{"desc":"390","fix":"391"},{"desc":"388","fix":"392"},{"desc":"393","fix":"394"},{"desc":"388","fix":"395"},{"desc":"388","fix":"396"},"Update the dependencies array to be: [firebase]",{"range":"397","text":"398"},"Update the dependencies array to be: [firebase, target]",{"range":"399","text":"400"},"Update the dependencies array to be: [Movies]",{"range":"401","text":"402"},"Update the dependencies array to be: [setLoading, showProfile]",{"range":"403","text":"404"},"Update the dependencies array to be: [firebase, user]",{"range":"405","text":"406"},"Update the dependencies array to be: [searchTerm, setSearchQuery]",{"range":"407","text":"408"},{"range":"409","text":"406"},"Update the dependencies array to be: [API_KEY, searchQuery]",{"range":"410","text":"411"},{"range":"412","text":"406"},{"range":"413","text":"406"},[733,735],"[firebase]",[738,740],"[firebase, target]",[1532,1534],"[Movies]",[1439,1452],"[setLoading, showProfile]",[2067,2073],"[firebase, user]",[1655,1667],"[searchTerm, setSearchQuery]",[1717,1723],[4500,4513],"[API_KEY, searchQuery]",[1636,1642],[1803,1809]]